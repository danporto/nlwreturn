/* ========================== GERAL ======================================= */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* Esta linha diz que a largura da minha box será contada a partir da borda e não a partir do conteúdo. Assim, não importa o tamanho da borda que eu coloque, a caixa continuará sendo 375 px ou 37.5 rem */
}

:root {
  --hue: 190;
  --primary-color: hsl(var(--hue), 100%, 26%);
  --headline: hsl(210, 11%, 15%);
  --paragraph: hsl(210, 9%, 31%);

  --brand-beige: hsl(39, 100%, 97%);
  --brand-light: hsl(calc(var(--hue) - 22), 23%, 89%);
  --brand-dark: hsl(var(--hue), 100%, 14%);

  --bg-light: hsl(180, 14%, 97%);

  font-size: 62.5%; /* 100% = 16px, logo 6,2% = 10px. Assim 1rem = 10px */

  --nav-height: 7.2rem;
}

html {
  scroll-behavior: smooth; /* deixa a rolagem suave */
}

html, 
body {
  width: 100%;
  height: 100%;

  
}

body {
  font-family: 'Dm Sans';
  font-size: 1.6rem;

  text-align: center;

  overflow: overlay;

  background-color: var(--bg-light);
}

.wrapper {
  width: 37.5rem;
  margin-inline: auto;
  padding-inline: 2.4rem;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
}

section {
  padding-block: 10rem;
}

section header h4 {
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 150%;
  letter-spacing: 0.08rem;
  color: var(--primary-color);
  text-transform: uppercase;
  margin-bottom: 1.6rem;

}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;

  color: var(--headline-color);

}

section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%;

  margin-bottom: 2.4rem; /*Caso houvesse outro h1 esta linha deveria ser retirada do projeto*/
}

section .content p {
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;
  color: var(--paragraph-color)
}

.button {
  background-color: var(--primary-color);
  
  border: none;
  border-radius: 4rem;
  
  margin-bottom: 6rem; /* Esta propriedade está sendo aceita, pois o outro botão também tem uma margem de 6rem, caso o layout fosse outro, talvez fosse interessante retirar daqui e individualizar a separação em cada botão*/
    
  padding: 1.6rem 3.2rem;
  width: fit-content;
    
  color: white;
  font-size: 1.4rem;
  font-weight: 700;
  text-transform: uppercase;

  display: flex; /* altera as caixas dentro da box. Pega o elemento e coloca um ao lado do outro */
  align-items: center;
  justify-content: center;
  gap: 1.6rem; /* espaço entre elementos */



  text-decoration: none;

}

.button:hover {
  background-color: var(--brand-dark);
  transition: background 200ms;
}

/* ========================== NAVIGATION ======================================= */
nav {
  display: flex;
  
  height: var(--nav-height); 
  
  position: fixed;
  top: 0;
  width: 100vw;

  z-index: 100; /*Isto faz com que o menu suba para cima dos outros elementos*/
}

nav .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between; /* coloca um espaço entre os elementos */
}

nav.scroll {
  background-color: var(--primary-color);

}



nav button {
  background: none;
  border: none;
  cursor: pointer;
}

/* ========================== MENU-EXPENDED ======================================= */
body.menu-expanded {
  overflow: hidden; /*retiro o scroll*/
}

body.menu-expanded > :not(nav) { /* Isto significa que vou aplicara a todos os filhos do body, exceto ao nav*/
  visibility: hidden; 
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0;
  visibility: hidden;
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(100%);
}

body.menu-expanded .menu {
  position: fixed;
  top: 0;
  left: 0;
  background-color: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);

  transition: transform 300ms; /* comando para transição do menu */
  transform: translateY(0);
 
}

.menu ul:nth-child(1) {
  display: flex;
  flex-direction: column;
  gap: 4.8rem;

  margin-top: 6rem;

  font-weight: 700;
  font-size: 2.4rem;
  line-height: 3.1rem;
}

.menu ul li a {
  color: white;
  text-decoration: none;
}

.menu .button{
  background: hsl(0, 0%, 100%);
  border-radius: 4rem;
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase;
  text-decoration: none;

  color: var(--primary-color);

  display: inline-block;
  padding: 16px 32px; 

  margin-top: 4.8rem;
  margin-bottom: 8rem;
}

.menu .button:hover {
  color: white;
  background-color: var(--brand-dark);
  transition: background 200ms;

  filter: brightness(1.3);
  
}

.social-links {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3.2rem;
}

body.menu-expanded .logo,
body.menu-expanded button {
  position: relative;
  z-index: 100;  
}

body.menu-expanded .logo path {
  fill: white; 
}

body.menu-expanded button path {
  stroke: white;
}

/* ========================== HOME ======================================= */
#home {
  padding-top: calc(4.1rem + var(--nav-height));
}

#home::before { /* tag css incluindo tag em html */
  content: '';
  width: 100%;
  height: calc(108rem + var(--nav-height));
  background-color: var(--brand-light);
  display: block;

  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  font-weight: 400;
  color: var(--paragraph);
  
  margin-bottom: 3.2rem;
}

#home .button {
  margin-right: auto; /* Necessário acrescentar isto quando definimos o display flex ou quando definimos uma largura para o elemento, tal como feito no header. Pedimos para margin right e left ficar automática, pois definimos uma largura para o elemento. */
  margin-left: auto;
}

#home img {
  width: 26.4rem;
  display: block;
  margin-inline: auto;
  object-position: 0 2rem;
}

#home .stats {
  width: 32.7rem;
  padding-block: 4rem; /* altera o padding-top e padding-bottom */
  margin-inline: auto; /* utilizamos isto para abreviar margin left e margin right em auto */

  background-color: var(--brand-beige); 
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;
  
  display: flex;
  flex-direction: column; /*inverto o eixo de linhas (row) para colunas, deixando um abaixo do outro. */
  justify-content: center; /* coloca um espaço entre os elementos, deixando eles ao centro */
  gap: 6rem; /* sepração que é feita entre os elementos */
}

#home .stat h3 {
  font-size: 4.8rem;
  color: var(--headline);
  line-height: 130%;

  margin-bottom: 0.4rem;
}

#home .stat p {
  margin: 0;
  color: var(--primary-color);
  font-size: 1.6rem;
  line-height: 150%;
}

/* ========================== SERVICES  ======================================= */

#services header h2 {
  margin-bottom: 6.0rem;
}

#services .cards {
  display: flex;
  flex-direction: column;
  gap: 3.2rem;
}

#services .card {
  padding: 2.4rem;
  text-align: left;

  background: white;

  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;
}

#services .card h3 {
  margin-block: 1.6rem;
}



/* ========================== ABOUT  ======================================= */
#about {
  text-align: left;
  background-color: var(--brand-beige);
}


#about header h2 {
  margin-bottom: 2.4rem;
}

#about .content p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;
}

/* ========================== CONTACT  ======================================= */

#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;

  margin-bottom: 3.2rem;
}

#contact ul li{
  display: flex;
  align-items: center;
  gap: 0.8rem;
}

/* ========================== FOOTER  ======================================= */

footer {
  background-color: var(--primary-color);
  padding-block: 6.0rem;

  text-align: left;
  color: white;

}

footer .logo {
  display: inline-block; /*mantem o display inline, mas permite modificações ao indicar que é inline-block*/
  margin-bottom: 2.4rem;
}

footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

footer .logo path {
  fill: white;
}

footer .social-links {
  justify-content: flex-start; /* Poderia ser feito com left também.*/
}

footer p {
  color: var(--beige-color);
  line-height: 2;
  margin-bottom: 3.2rem;
}

/* custom colors */

#services .card circle {
  fill: var(--brand-light);
}

#navigation .logo path[fill*="#00856F"], /* procura o path que contenha o fill desta cor*/
#backToTopButton circle {
  fill: var(--primary-color);
}

button.open-menu path[stroke*="#00856F"], 
#contact li path {
  stroke: var(--primary-color);
}

body.menu-expanded #navigation .logo path,
#navigation.scroll .logo path {
  fill: white;
} 

#navigation.scroll button.open-menu path[stroke*="#00856F"] {
  stroke: white;
} 

/* ==========================BACK TO TOP======================================= */

#backToTopButton {
  position: fixed;
  bottom: 1rem;
  right: 2.5rem;
  opacity: 0;
  visibility: hidden;

  transform: translateY(100%);
  transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}